/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.esd.cw.dao;

import com.esd.cw.model.Member;
import com.esd.cw.util.Util;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 *
 * @author shaun
 */
public class MemberDao extends AbstractDao {

    public MemberDao() {
        super();
    }

    public List<Member> findAll() {

        // define a list of members
        List<Member> allMembers = new ArrayList<Member>();

        // define a hash map to store the result in
        ArrayList<HashMap> result = new ArrayList();

        try {
            // run the query and get a hash map of all rows
            result = super.select("SELECT * FROM Members");
        } catch (SQLException e) {

        }

        // create list of members from the hash map generated by running the query
        for (HashMap r : result) {
            allMembers.add(
                    new Member(
                            r.get("id").toString(),
                            r.get("name").toString(),
                            r.get("address").toString(),
                            Util.getDateFromString(r.get("dob").toString()),
                            Util.getDateFromString(r.get("dor").toString()),
                            r.get("status").toString(),
                            Float.parseFloat(r.get("balance").toString()),
                            Integer.parseInt(r.get("claims_remaining").toString())
                    )
            );
        }

        // return all the members
        return allMembers;
    }

    public Member findById(String memberId) {

        // define a hash map to store the result in
        ArrayList<HashMap> result = new ArrayList();

        try {
            result = super.select("SELECT * FROM Members WHERE id='" + memberId + "'");
        } catch (SQLException e) {

        }

        if (result.size() > 0) {
            return new Member(
                    result.get(0).get("id").toString(),
                    result.get(0).get("name").toString(),
                    result.get(0).get("address").toString(),
                    Util.getDateFromString(result.get(0).get("dob").toString()),
                    Util.getDateFromString(result.get(0).get("dor").toString()),
                    result.get(0).get("status").toString(),
                    Float.parseFloat(result.get(0).get("balance").toString()),
                    Integer.parseInt(result.get(0).get("claims_remaining").toString())
            );
        } else {
            return new Member();
        }
    }

    boolean insertMember(Member member) {
        return true;
    }

   public boolean updateMember(Member member) throws SQLException {
        StringBuilder s = new StringBuilder();
        try {

            s.append("UPDATE Members SET balance =");
            s.append(member.getBalance());
            s.append("WHERE id='");
            s.append(member.getMemberId());
            s.append("'");

            super.insert(s.toString());

        } catch (Exception e) {
            System.out.println(e.toString());
        }

        return true;
    }

    boolean deleteMember(Member member) {
        return true;
    }
}
